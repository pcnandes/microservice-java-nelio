spring.application.name=hr-payroll
#server.port=8101

#pegando uma porta aleatorea do eureka
server.port=${PORT:0}
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


# tem q ter o mesmo nome do projeto server (ver em application.properties)
# aqui o ribbon vai controlar as chamadas, executando um caminho por requisição 
# hr-worker.ribbon.listOfServers=localhost:8001,localhost:8002

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

##### O projeto Spring Cloud Hystrix está obsoleto. O Spring Cloud Load Balancer será o sucesso.

# cofngirura o timeout do hystrix em 1 minuto
# hystrix tem q ser maior q o ribbon
# ribbon executa acao em casol de falha.. esses tempos sao para aguardar até dar erro de timeout
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000


# Client load balance. Ele vai se comunicar com o servidor de nome do eureca para achar o ip do servico
ribbon.ConnectTimeout=10000
ribbon.ReadTimeout=20000